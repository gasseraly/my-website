version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cobra-app
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_DATABASE=cobra
      - DB_USERNAME=cobra_user
      - DB_PASSWORD=cobra_password
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - mysql
      - redis
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - cobra-network

  mysql:
    image: mysql:8.0
    container_name: cobra-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=cobra
      - MYSQL_USER=cobra_user
      - MYSQL_PASSWORD=cobra_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - cobra-network

  redis:
    image: redis:7-alpine
    container_name: cobra-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cobra-network

  nginx:
    image: nginx:alpine
    container_name: cobra-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./public:/var/www/html/public
    depends_on:
      - app
    networks:
      - cobra-network

volumes:
  mysql_data:
  redis_data:

networks:
  cobra-network:
    driver: bridge
<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Process;

class AgentProposeFixCommand extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'agent:propose-fix';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Propose code style fixes via Pull Request instead of applying them directly';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $this->info('🚀 Starting Agent Propose Fix process...');

        // Generate unique branch name with timestamp
        $timestamp = now()->format('Y-m-d-H-i-s');
        $branchName = "fix/style-fixes-{$timestamp}";

        $this->info("📝 Generated branch name: {$branchName}");

        // Step 1: Create and switch to new branch
        $this->info('🌿 Creating and switching to new branch...');
        $checkoutResult = Process::run("git checkout -b {$branchName}");

        if ($checkoutResult->failed()) {
            $this->error('❌ Failed to create branch: '.$checkoutResult->errorOutput());

            return 1;
        }

        $this->info('✅ Branch created successfully');
        $this->info('Git output: '.$checkoutResult->output());

        // Step 2: Run Pint fixer
        $this->info('🎨 Running Laravel Pint code style fixer...');
        $pintPath = implode(DIRECTORY_SEPARATOR, ['.', 'vendor', 'bin', 'pint']);
        $pintResult = Process::run($pintPath);

        if ($pintResult->failed()) {
            $this->warn('⚠️ Pint encountered issues: '.$pintResult->errorOutput());
        } else {
            $this->info('✅ Pint completed successfully');
        }

        $this->info('Pint output: '.$pintResult->output());

        // Step 3: Stage all changes
        $this->info('📦 Staging all changes...');
        $addResult = Process::run('git add .');

        if ($addResult->failed()) {
            $this->error('❌ Failed to stage changes: '.$addResult->errorOutput());

            return 1;
        }

        $this->info('✅ Changes staged successfully');
        $this->info('Git add output: '.$addResult->output());

        // Step 4: Commit changes
        $this->info('💾 Committing changes...');
        $commitResult = Process::run('git commit -m "style: Apply automated code style fixes"');

        if ($commitResult->failed()) {
            $this->warn('⚠️ No changes to commit or commit failed: '.$commitResult->errorOutput());
        } else {
            $this->info('✅ Changes committed successfully');
        }

        $this->info('Git commit output: '.$commitResult->output());

        // Step 5: Push the new branch to remote
        $this->info('🚀 Pushing branch to remote repository...');
        $pushResult = Process::run("git push --set-upstream origin {$branchName}");

        if ($pushResult->failed()) {
            $this->error('❌ Failed to push branch: '.$pushResult->errorOutput());

            return 1;
        }

        $this->info('✅ Branch pushed successfully');
        $this->info('Git push output: '.$pushResult->output());

        // Step 6: Create Pull Request using GitHub CLI
        $this->info('🔗 Creating Pull Request...');
        $prResult = Process::run([
            'gh', 'pr', 'create',
            '--base', 'main',
            '--head', $branchName,
            '--title', 'Automated Style Fixes',
            '--body', 'This PR was automatically generated by the AI agent to apply code style fixes found by Laravel Pint.',
        ]);

        if ($prResult->failed()) {
            $this->error('❌ Failed to create Pull Request: '.$prResult->errorOutput());
            $this->warn('⚠️ Branch was pushed successfully, but PR creation failed.');
            $this->warn('You can manually create the PR at: https://github.com/your-repo/compare/main...'.$branchName);

            return 1;
        }

        $this->info('✅ Pull Request created successfully');
        $this->info('PR output: '.$prResult->output());

        $this->info('🎉 Agent Propose Fix process completed successfully!');
        $this->info("✅ Branch '{$branchName}' has been pushed and Pull Request created.");

        return 0;
    }
}

name: COPRRA CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pdo_mysql, curl, zip, bcmath
        tools: composer

    - name: Install Composer Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse --memory-limit=256M

    - name: Run PHPMD
      run: vendor/bin/phpmd app text cleancode,codesize,controversial,design,naming,unusedcode --ignore-violations-on-exit

  test-analyze-and-fix:
    runs-on: ubuntu-latest

    # هذا هو الجزء المهم الذي يضيف قاعدة بيانات مؤقتة
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: coprra_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pdo_mysql, curl, zip, bcmath
        tools: composer
        coverage: pcov

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Install NPM Dependencies
      run: npm install

    - name: Build assets
      run: npm run build
      working-directory: .

    - name: Run Laravel Pint (Auto-fix)
      run: ./vendor/bin/pint

    # هذا هو الجزء الذي يقوم بتشغيل المايجريشن على قاعدة البيانات المؤقتة
    - name: Run Migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_DATABASE: coprra_test
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan migrate

    - name: Run Tests with PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_DATABASE: coprra_test
        DB_USERNAME: root
        DB_PASSWORD: root
      run: composer test

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Commit and Push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add -A
        git diff-index --quiet HEAD || git commit -m "style: auto-fixes by pint"
        git push

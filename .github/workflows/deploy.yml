name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pdo_mysql, curl, zip, bcmath
    
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Run Tests
      run: composer test
    
    - name: Build Docker Image
      run: |
        echo "Building Docker image..."
        docker build -t coprra:latest .
        echo "âœ… Docker image built successfully"

  performance-tests:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, sqlite, pgsql, redis, memcached, zip, bcmath, soap, intl, gd, exif, iconv, imagick
    
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    
    - name: Run Performance Tests
      run: composer test -- --testsuite=Feature --filter=Performance
    
    - name: Run Load Tests with Artillery
      run: |
        npm install -g artillery
        artillery quick --count 100 --num 10 http://localhost:8000/api/products

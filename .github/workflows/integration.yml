name: Integration

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '0 14 * * 1' # Weekly on Monday at 2 PM
  workflow_dispatch:

jobs:
  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: coprra_test
          MYSQL_USER: coprra
          MYSQL_PASSWORD: coprra
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pdo_mysql, curl, zip, bcmath, redis

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Setup Environment
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Run Database Migrations
      run: |
        php artisan migrate --force --database=mysql
        php artisan db:seed --force

    - name: Run Integration Tests
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_DATABASE: coprra_test
        DB_USERNAME: root
        DB_PASSWORD: root
        REDIS_HOST: 127.0.0.1
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
        REDIS_PASSWORD: null
      run: |
        # Run feature tests that require database
        composer test -- --testsuite=Feature --filter=Integration
        
        # Run specific integration tests
        php artisan test --testsuite=Feature --filter=UserRegistration
        php artisan test --testsuite=Feature --filter=UserLogin
        php artisan test --testsuite=Feature --filter=ProductManagement
        php artisan test --testsuite=Feature --filter=OrderProcessing
        php artisan test --testsuite=Feature --filter=PaymentProcessing
        php artisan test --testsuite=Feature --filter=EmailNotification
        php artisan test --testsuite=Feature --filter=FileUpload
        php artisan test --testsuite=Feature --filter=SearchFunctionality
        php artisan test --testsuite=Feature --filter=WishlistFunctionality
        php artisan test --testsuite=Feature --filter=ReviewSystem
        php artisan test --testsuite=Feature --filter=AdminPanel
        php artisan test --testsuite=Feature --filter=APIEndpoints

    - name: Update Status
      run: |
        echo "âœ… All integration tests completed successfully"